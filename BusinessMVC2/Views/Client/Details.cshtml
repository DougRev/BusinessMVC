@model BusinessModels.BusinessDetails

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div id="details-container">

    <div id="client-details">
        <h4>Client Information</h4>
        <hr />
        <dl>
            <dt>
                @Html.DisplayNameFor(model => model.BusinessId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BusinessId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BusinessName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BusinessName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FranchiseeName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FranchiseeName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.State)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.State)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Compactibility)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Compactibility)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.XferStation)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.XferStation)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ToClientDist)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ToClientDist)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ToHaulerDist)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ToHaulerDist)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FromHaulerDist)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FromHaulerDist)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LandfillDist)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LandfillDist)
            </dd>


            <dt>
                @Html.DisplayNameFor(model => model.HaulsPerDay)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.HaulsPerDay)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PreSMTYearlyHauls)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PreSMTYearlyHauls)
            </dd>
        </dl>
    </div>
    <div id="client-emissions">
        <h4 id="emissions-header">Emissions Information</h4>
        <hr />
        <button id="NOXEmissions">NOX</button>
        <button id="N20Emissions">N20</button>
        <button id="PM25Emissions">PM25</button>
        <button id="PM10Emissions">PM10</button>
        <button id="SO2Emissions">SO2</button>
        <button id="CH4Emissions">CH4</button>
        <button id="COEmissions">CO</button>
        <button id="VOCEmissions">VOC</button>
        <button id="CO2Emissions">CO2</button>

        <table id="emissions">
            <thead>
                <tr>
                    <th>Property Name</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody id="emissionsBody">
                @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("NOX")))
                {
                    <tr>
                        <td>@prop.Name</td>
                        <td>@prop.GetValue(Model, null)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>


<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.BusinessId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<script>
    var noxButton = document.getElementById("NOXEmissions");
    var n20Button = document.getElementById("N20Emissions");
    var pm25Button = document.getElementById("PM25Emissions");
    var pm10Button = document.getElementById("PM10Emissions");
    var so2Button = document.getElementById("SO2Emissions");
    var ch4Button = document.getElementById("CH4Emissions");
    var coButton = document.getElementById("COEmissions");
    var vocButton = document.getElementById("VOCEmissions");
    var co2Button = document.getElementById("CO2Emissions");

    var emissionsBody = document.getElementById("emissionsBody");
    var emissionsData = "NOX";

    function changeNOX() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("NOX")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changeN20() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("N20")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changePM25() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("PM25")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changePM10() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("PM10")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changeSO2() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("SO2")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changeCH4() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("CH4")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changeCO() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("CO")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changeVOC() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("VOC")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }
    function changeCO2() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("CO2")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    function changeCO2EQ() {
        emissionsBody.innerHTML = "";
        @foreach (var prop in Model.GetType().GetProperties().Where(p => p.Name.Contains("CO2EQ")))
        {
            <text>
            emissionsBody.innerHTML += '<tr><td>@prop.Name</td><td>@prop.GetValue(Model, null)</td></tr>';
            </text>
        }
    }

    noxButton.addEventListener("click", function () {
        emissionsData = emissionsData === "NOX" ? "N20" : "NOX";
        changeNOX();
    });

    n20Button.addEventListener("click", function () {
        emissionsData = emissionsData === "N20" ? "PM25" : "N20";
        changeN20();
    });

    pm25Button.addEventListener("click", function () {
        emissionsData = emissionsData === "PM25" ? "PM10" : "PM25";
        changePM25();
    });

    pm10Button.addEventListener("click", function () {
        emissionsData = emissionsData === "PM10" ? "SO2" : "PM10";
        changePM10();
    });

    SO2Button.addEventListener("click", function () {
        emissionsData = emissionsData === "SO2" ? "CH4" : "SO2";
        changeSO2();
    });

    CH4Button.addEventListener("click", function () {
        emissionsData = emissionsData === "CH4" ? "CO" : "CH4";
        changeCH4();
    });

    COButton.addEventListener("click", function () {
        emissionsData = emissionsData === "NOX" ? "N20" : "NOX";
        changeCO();
    });

    VOCButton.addEventListener("click", function () {
        emissionsData = emissionsData === "NOX" ? "N20" : "NOX";
        changeVOC();
    });

    CO2Button.addEventListener("click", function () {
        emissionsData = emissionsData === "NOX" ? "N20" : "NOX";
        changeCO2();
    });


</script>